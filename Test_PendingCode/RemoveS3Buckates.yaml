Resources:
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: !Sub |
          import boto3
          def lambda_handler(event, context):
              s3 = boto3.client('s3')
              unused_buckets = []
              response = s3.list_buckets()
              for bucket in response['Buckets']:
                  bucket_name = bucket['Name']
                  try:
                      s3.list_objects(Bucket=bucket_name)
                  except Exception:
                      unused_buckets.append(bucket_name)
              for bucket_name in unused_buckets:
                  s3.delete_bucket(Bucket=bucket_name)
        Runtime: python3.9
        Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 60
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: 'S3DeletePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:ListBuckets'
                  - 's3:ListObjects'
                  - 's3:DeleteBucket'
                Resource: '*'
  CloudWatchEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression: 'cron(0 0 * * ? *)'
      State: 'ENABLED'
      Targets:
        - Id: 'LambdaTarget'
          Arn: !GetAtt LambdaFunction.Arn
